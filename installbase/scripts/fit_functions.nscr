#*  _____    __                            ______        
 * |     \  |  |  __ __   _______   ____  |  __  \  ____ 
 * |  |\  \ |  | |  |  | |       \ / __ \ |   ___/ / __ \
 * |  | \  \|  | |  |  | |  Y Y  | | ___/ |     \  | ___/
 * |__|  \_____| |____/  |__|_|__| \____) |__|\__\ \____)
 * ~ ~ ~ ~  Framework fuer Numerische Rechnungen  ~ ~ ~ ~
 * ======================================================
 * | ++ (c) 2016, E. Haenel et al. +++ GNU GPL v 3.0 ++ |
 * ======================================================
 *
 *******************************************************************************
 * Dieses Script ist freie Software. Sie können es unter den Bedingungen       *
 * der GNU General Public License, wie von der Free Software Foundation        *
 * veröffentlicht, weitergeben und/oder modifizieren, entweder gemäß Version 3 *
 * der Lizenz, oder (nach Ihrer Option) jeder späteren Version.                *
 * Die Veröffentlichung dieses Scripts erfolgt in der Hoffnung, dass es        *
 * Ihnen von Nutzen sein wird, aber OHNE IRGENDEINE GARANTIE, sogar ohne die   *
 * implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN         *
 * BESTIMMTEN ZWECK. Details stehen in der GNU General Public Licence          *
 * Sie sollten ein Exemplar der GNU GPL zusammen mit diesem Script erhalten    *
 * haben. Falls nicht, siehe <http://www.gnu.org/licenses/>.                   *
 *******************************************************************************
 *
 * Dieses Script definiert einige sinnvolle Fitfunktionen, die entweder zu Beginn
 * einer NumeRe-Sitzung durch "script -start=fit_functions" geladen werden können,
 * oder mit "set -defcontrol" einmalig der Definitionsdatei hinzugefügt werden können,
 * oder aber mittels der Syntax "@fit_functions: defines" als Header für eigene
 * Scripte verwendet werden kann.
 *#

## Lorentzkurve. Wird für Resonanzuntersuchungen verwendet.
ifndefined fit_lorentz(x,x0,amplitude,daempfung,offset) := amplitude/sqrt((x^2-x0^2)^2+4*daempfung^2*x^2)+offset -set comment="Lorentzkurve für Resonanzuntersuchungen."

## Gaußglocke. Statistikfunktion.
ifndefined fit_gauss(x,x0,amplitude,sigma,offset) := amplitude*exp(-(x-x0)^2/(2*sigma^2))+offset -set comment="Gaußglocke als Standard-Statistikfunktion."

## Standard-Exponentialfunktion. Für die meisten Wachstums-/Zerfalluntersuchungen geeignet.
ifndefined fit_exp(x,x0,amplitude,tparam,offset) := amplitude*exp((x-x0)/tparam)+offset -set comment="Exponentialfunktion. Für die meisten Wachstums-/Zerfalluntersuchungen geeignet."

## Sinusfunktion.
ifndefined fit_sin(x,amplitude,frequenz,phase,offset) := amplitude*sin(frequenz*x+phase)+offset -set comment="Sinusfunktion. Reagiert bei Anpassungen äußerst empfindlich auf eine möglichst genaue Vorgabe der Frequenz."

## Logarithmische Normalverteilung.
ifndefined fit_lognormal(x,x0,amplitude,width,offset) := amplitude*exp(-(ln(x/x0)/width)^2)+offset -set comment="Logarithmische Normalverteilung."

## Logistisches Wachstum.
ifndefined fit_logistic(x,x0,border,rate,f0,offset) := border/(1+exp(-rate*border*(x-x0))*(border/f0-1))+offset -set comment="Logistisches Wachstum."

## Fitfunktion für einen Konus im Rahmen des Hertz-Kontaktmodells
ifndefined fit_hertzcone(x,x0,bVal,offset) :=  (x<x0) ? offset : x-x0+abs(bVal)/2*(1-sqrt(1+4*(x-x0)/abs(bVal)))+offset -set comment="Fitfunktion für das Hertz-Kontaktmodell für einen Kegel."

## Fitfunktion für eine Sphäre im Rahmen des Hertz-Kontaktmodells
ifndefined fit_hertzsphere(x,x0,bVal,offset) := (x<x0) ? offset : abs(bVal) * (x-x0)^(1.5) + offset -set comment="Fitfunktion für das Hertz-Kontaktmodell für eine Sphäre."
