#*  _____    __                            ______        
 * |     \  |  |  __ __   _______   ____  |  __  \  ____ 
 * |  |\  \ |  | |  |  | |       \ / __ \ |   ___/ / __ \
 * |  | \  \|  | |  |  | |  Y Y  | | ___/ |     \  | ___/
 * |__|  \_____| |____/  |__|_|__| \____) |__|\__\ \____)
 * ~ ~ ~ ~  Framework fuer Numerische Rechnungen  ~ ~ ~ ~
 * ======================================================
 * | ++ (c) 2014, E. Haenel et al. +++ GNU GPL v 3.0 ++ |
 * ======================================================
 *
 *******************************************************************************
 * Dieses Script ist freie Software. Sie können es unter den Bedingungen       *
 * der GNU General Public License, wie von der Free Software Foundation        *
 * veröffentlicht, weitergeben und/oder modifizieren, entweder gemäß Version 3 *
 * der Lizenz, oder (nach Ihrer Option) jeder späteren Version.                *
 * Die Veröffentlichung dieses Scripts erfolgt in der Hoffnung, dass es        *
 * Ihnen von Nutzen sein wird, aber OHNE IRGENDEINE GARANTIE, sogar ohne die   *
 * implizite Garantie der MARKTREIFE oder der VERWENDBARKEIT FÜR EINEN         *
 * BESTIMMTEN ZWECK. Details stehen in der GNU General Public Licence          *
 * Sie sollten ein Exemplar der GNU GPL zusammen mit diesem Script erhalten    *
 * haben. Falls nicht, siehe <http://www.gnu.org/licenses/>.                   *
 *******************************************************************************
 *
 * Dies ist ein Beispielscript fuer NumeRe ab Version v 1.0.0 "Biot"
 * Geschrieben am 2014-04-09
 * Dieses Script kann in NumeRe durch das Kommando 'script -start=samples/sample_3'
 * (oder ausserhalb von NumeRe durch Doppelklicken auf dieses File) aufgerufen werden.
 * In diesem Script werden die Animationsfaehigkeit von Plots, die Darstellung
 * von 3D-Trajektorien, sowie erweiterte Plotfunktionaliaeten demonstriert.
 *
 * Fuer notepad++ existiert eine Syntax-Highlighting (numere_synt_highlight.xml) 
 * fuer NumeRe-Scripte mit der Dateiendung '*.nscr'
 *
 * (Alles, was hinter '##' geschrieben wird, ist ein Kommentar und wird bei der Auswertung
 * ignoriert)
 *#
 
## Alles was zwischen #*...*# steht, ist ein Blockkommentar und wird ebenfalls ignoriert

## Der Parameter "-noquotes" unterdrueckt die Anfuehrungszeichen in der Ausgabe:
"Willkommen bei diesem 3. Beispielscript\n----------------------------------------------\n(Animieren, Trajektorien & Erweitertes Plotten)" -noquotes

#*
 * Wir definieren zuvor die noetigen Funktionen. Die Funktion "tornado(r,t)" soll dabei die Bahn eines Teilchens
 * in einem Tornado beschreiben, die wir visualisieren wollen. "kugelwelle(x,y,t)" ist die 2D-Darstellung
 * des Realteils einer Kugelwelle, die wir animieren wollen.
 *#
ifndefined tornado(r,t) := r*t*cos(8*r*t),r*t*sin(8*r*t),2*r*t -set comment="Modelliert die Trajektorie eines Staubteilchens in einem Tornado"
ifndefined kugelwelle(x,y,t) := A/sqrt(x^2+y^2)*cos(k*sqrt(x^2+y^2)-omega*t) -set comment="Realteil der 2D-Darstellung einer Kugelwelle"

#*
 * Die freien Parameter der Kugelwelle legen wir im Folgenden fest: A soll dabei die Amplitude, k die
 * Wellenzahl (Wellenlaenge) und omega die Frequenz der Anregung beschreiben.
 *#
A = 5, k = 2, omega = _2pi;

#*
 * Wir werden zunaechst die Trajektorie des Tornados visualisieren. Dazu verwenden wir den "plot3d"-plotting-style
 * von NumeRe, der die Trajektorie einer Bahn anhand dreier durch Kommata getrennter Funktionen mittels
 * des "Zeit"-Parameters "t" berechnet. Wir verwenden r = 3, heben alle vorherigen Einstellungen auf,
 * verdoppeln die Aufloesung des plots und setzen den 
 * Zeitparameter auf t = [0,2]. Die Ausgabe wollen wir nach "sample_3_tornado.png" speichern:
 *#
plot3d tornado(3,t) -set reset samples=200 t=0:2 opng=sample_3_tornado

#*
 * NumeRe kann die Generierung der Teilchenbahn aber auch animieren. Wir wollen das im Folgenden einmal
 * darstellen. Dazu wird ebenfalls der Parameter "t" verwendet und standardmaessig mit 50 Frames
 * gearbeitet. (Dies koennte mit animate=FRAMES geandert werden, ist aber selten noetig). Die dabei generierte
 * GIF-Datei soll ebenfalls den Namen "sample_3_tornado" tragen. Hier muessen wir das Plotintervall explizit angeben,
 * da es sonst bei jedem Frame neu berechnet wird (was auch sehr interessant aussehen kann).
 *#
plot3d tornado(3,t) -set animate ogif=sample_3_tornado [-6:6,-6:6,0:12]

#*
 * Nun moechten wir uns die oben definierte Kugelwelle einmal als Meshgrid ansehen. Dazu muessen wir aber
 * die Animation explizit ausschalten, da anderenfalls aus diesem Meshgrid auch eine Animation erzeugt wird.
 * Ausserdem ist es nicht noetig, mit 200 Samples zu arbeiten. Wir setzen dies wieder auf 100:
 *#
mesh kugelwelle(x,y,0) -set noanimate samples=100 opng=sample_3_kugelwelle_1

#*
 * Es faellt womoeglich auf, dass die Darstellung des Meshgrids sehr "grob" wirkt. Dies ist seit der Version
 * 1.0.0 "Biot" so gewollt, da es die Speicherung der Ausgabe stark beschleunigt (und als Vorschau vollkommen
 * ausreichend sein sollte). Die Qualitaet kann selbstverstaendlich wieder erhoeht werden, soll aber nicht 
 * an dieser Stelle geschehen. Stattdessen wollen wir einmal die Ausrichtung des Plots ein wenig aendern.
 *
 * Die Ausrichtung eines 3D- oder 2D-Plots kann mit der Option "rotate=THETA,PHI" beeinflusst werden. Dabei
 * kippt der Winkel THETA um die aktuelle horizontale Achse, der Winkel PHI rotiert um die z-Achse des Plots.
 * Die Standardwerte sind rotate=60,115. Wir wollen nun den Plot auf 75° kippen (Das Komma ist dabei essentiell!):
 *#
mesh kugelwelle(x,y,0) -set rotate=75, opng=sample_3_kugelwelle_2

#*
 * Jetzt sieht man den Plot noch deutlicher von der Seite und kann die Oszillationen deutlicher verfolgen
 * Fuer die folgenden beiden Meshgrids (ein statisches und eine Animation) wollen wir die Qualitaetsstufe auf
 * die mittlere erhoehen. Dies kann man mit der Option "hires=allmedium" erreichen, die die mittlere
 * Qualitaetsstufe fuer alle weiteren Plots aktiviert. Sollte der Entwurfsmodus bereits global deaktiviert worden
 * sein, zeigt diese Plot keinen Unterschied.
 *#
mesh kugelwelle(x,y,0) -set opng=sample_3_kugelwelle_3 hires=allmedium

#*
 * Das sieht deutlich besser aus, nicht wahr? Nun die Animation. Dabei setzen wir den Zeitparameter "t",
 * der auch hier fuer die Animation verwendet wird, zurueck auf t=[0,1], da eine Periode fuer eine 
 * Endlosschleife deutlich ausreichend ist. Außerdem ändern wir das Farbschema auf ein zwei-endiges (besser für
 * diesen Fall) und ergänzen ein viertes Plotintervall: das Intervall der Farbskala.
 *#
mesh kugelwelle(x,y,t) -set t=0:1 animate ogif=sample_3_kugelwelle [-6:6,-6:6,-60:60,-60:60] colorscheme="bGr"

#*
 * Das hat eine gute Weile benoetigt. Wir koennen die Animation auch als ein Oberflaechenplot mit
 * zusaetzlichen Lichteffekten darstellen:
 *#
surf kugelwelle(x,y,t) -set light ogif=sample_3_kugelwelle_surf [-6:6,-6:6,-60:60,-60:60]
 
## Zurueckrotieren und die Qualitaet zuruecksetzen...
plot -set reset

"Ende des Beispielscripts" -noquotes
