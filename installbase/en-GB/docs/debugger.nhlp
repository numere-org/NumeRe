<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="debugger">
	<title string="Debugger" />
	NumeRe contains a supporting function for searching and detecting errors in scripts, procedures and plugins: the so-called NumeRe-Debugger. This function, which is activated with pressing on the button on the toolbar or via the corresponding menu item or by pressing <code>[Ctrl-Shift-D]</code>, returns additional information, if a script, a procedure or a plugin aborts due to an unexpected error. If the NumeRe-Debugger is active and an error occures, then the editor will jump to the relevant line in the failing file and a window will be opened, which will display additional details concerning the error.
	The NumeRe-Debugger reports out of three categories:
	<list>
		<item node="Module information">Returns information about the failing expression, the failing module (the file) and the line number, in which the error occured. Especially the line number may deviate (for example in loops) around a couple of lines, if many loops and if clauses are enclosed by each other or if many lines are commented out.</item>
		<item node="Stacktrace">The stacktrace is a list if the called procedures until the error was reached. During procedure execution, the stack will be built bottom-up. If NumeRe leaves a procedure, this procedure will be removed from the stack. Using the stacktrace the program execution can be reconstructed. The passed values will be protocoled as well.</item>
		<item node="local variables">This section contains the current local variables (numerical variables and string variables) listed together with their values, which were set in the moment of the error. If the debugger is used within a script, then this section lists global variables. If the debugger window was already opened, then the differences to the previous variable values will be highlighted in red.</item>
	</list>
	In addition to the abortion due to an error, additional "breakpoints" may be set, which will pause the execution but not abort it. Such a breakpoint will be set temporary with the corresponding editor function or permanently by placing the characters <code>|&gt;</code> at the beginning of the corresponding line. NumeRe will pause the execution <em>before</em> the actual line will be executed and list the current values of the local variables. By using the "Continue" button in the debugger window the execution will be resumed.
	<em>Note:</em> The breakpoint functionality is currently the only purpose of the NumeRe-Debugger if it is used within a script. The Debugger won't be shown if an error occurs.
	<em>Important:</em> NumeRe will ignore the characters <code>|&gt;</code> at the beginning of the line, if the NumeRe-Debugger is not active.
</article>