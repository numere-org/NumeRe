<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="drawing">
	<title string="Drawings and annotations" />
	You may create simple drawings with annotations with NumeRe. The corresponding command is <code>draw</code>, which in principle has the same syntax just like <code>plot</code> and similar. Each object, which shall be integrated in this mode to the drawing plane (which has a coordinate system, too, which, in principle, will be showed as well), is representated using a special function.
	The functions for the drawing mode may only be used in this mode. Without this mode, they won't be recognized as such. Their effect on the drawing is listed a few lines below. The following abbreviations will be used in the list:
	<list>
		<item node="PNT">Corresponds to a <expr>x-y</expr> coordinate pair, which shall be entered in the format <code>x,y</code>.</item>
		<item node="STL">This is the always optional style string, in which further formatting options may be passed. The formatting options are represented by single characters and shall be passed without an additional separator as a string, e.g. <code>r</code> for coloring in red.</item>
		<item node="DIR">This names a tangent direction vector, for example in which direction the <code>curve()</code> shall bend itself. Has to be passed through <code>x,y</code>.</item>
		<item node="ANG">The function <code>arc()</code> needs the information of an angle, which is represented by this value. The angle has to be passed in degrees.</item>
		<item node="RAD">The radius of a circle, a sphere or an ellipse.</item>
		<item node="SFT">Special parameter for the function <code>drop()</code>. Corresponds to an additional shift.</item>
		<item node="ASP">Special parameter for the function <code>drop()</code>. Determines the stength of aspherity.</item>
		<item node="TXT">A textual string, which shall be printed at a given position. Pass this surrounded by quotation marks.</item>
	</list>
	The following functions may be used in an arbitrary order and combination in the drawing mode, as long as they are separated with commas.
	<list>
		<item node="point(PNT,STL)">Draws a point at the position PNT using the style STL. The shape of the point an its color may be modified using STL.</item>
		<item node="trace(PNT,PNT,STL)<br>tracev(PNT,DIR,STL)">Draws a straight line from PNT to PNT or PNT to PNT+DIR, respectively. If only one point is passed, then the second will be located at the origin. Color, shape and line endings may be modified using STL.</item>
		<item node="curve(PNT,DIR,PNT,DIR,STL)">Draws a "bezier" line from PNT to PNT. The direction vectors DIR determine the corresponding curvature of the curve. Please note that the coordinate system at the second point will be rotated by 180 degrees (additional signs are probably needed for the second direction vector). Color, shape and line endings may be modified using STL.</item>
		<item node="arc(PNT,PNT,ANG,STL)<br>arcv(PNT,DIR,ANG,STL)">Draws an arc with the angle ANG around the point PNT starting from point PNT or PNT+DIR, respectively. The orientation of the arc is counter-clockwise. The style of the arc may be modified with STL.</item>
		<item node="triangle(PNT,PNT[,PNT],STL)<br>trianglev(PNT,DIR[,DIR],STL)">Draws a triangle. You may pass either two or three edges. If you pass two edges, NumeRe will draw an equal-sided triangle, if you pass all three, then it will be a custom one. The edges are numbered going from lower left in counter-clockwise order. The filling of the triangle may be modified with STL.</item>
		<item node="face(PNT,PNT[,PNT,PNT],STL)<br>facev(PNT,DIR[,DIR,DIR],STL)">Draws a quadrangle. You may pass from two to four edges. If you pass two, NumeRe will draw an square, passing three edges will result in a parallelogram and all four edges will draw a custom quadrangle. The edges are numbered going from lower left in counter-clockwise order. In the case of <code>facev()</code> the first two vectors are the lower and the left border and the last is the diagonal opposite one. The filling of the quadrangle may be modified using STL.</item>
		<item node="polygon(PNT,PNT,N,STL)<br>polygonv(PNT,DIR,N,STL)">Draws a regular N-edged polygon around the point PNT going from point PNT, or PNT+DIR, respectively. The filling of the polygon may be modified using STL.</item>
		<item node="circle(PNT,RAD,STL)">Draws a circle around the point PNT with the radius RAD. The filling and the style of the circle may be modified using STL. <code>polygon()</code> with N >= 30 generates simmilar results.</item>
		<item node="ellipse(PNT,PNT,RAD,STL)<br>ellipsev(PNT,DIR,RAD,STL)">Generates an ellipse with the focus points PNT or PNT+DIR, respectively, and the ellipse radius RAD. The filling and the style of the ellipse may be modified using STL.</item>
		<item node="sphere(PNT,RAD,STL)">Draws a sphere with the radius RAD at the coordinates PNT. The color may be modified using STL. The plot option <code>light</code> makes the 3d effect visible.</item>
		<item node="drop(PNT,DIR[,SFT,ASP],STL)">Draws a three dimensional drop at the point PNT, which is tilted in the direction DIR. The optional parameters SFT and ASP may be used, to modify the shape of the drop. The color may be modified and the plot option <code>light</code> makes the 3D effect visible.</item>
		<item node="text(PNT[,PNT],TXT,STL)">Prints the text TXT at the position PNT. The justification and the color may be modified, in which justification and shape have to be separated with <code>:</code> from the color information. The justification is represented using <code>LRC</code> (Left-Right-Centered) and the shape with <code>rib</code> (roman-italic-bold); the colors according <a href="nhlp://colors?frame=new">help colors</a>. The second coordinate pair may be used, if the text shall not printed horizontally.</item>
	</list>
	The colors, which may be used in the style strings, are the same to those found at <a href="nhlp://colors?frame=new">help colors</a>. The line endings of <code>trace()</code>, <code>curce()</code> and <code>arc()</code>, the line variants of all line-based plots and the shape of the points for <code>point()</code> are described in the list at <a href="nhlp://linestyles?frame=new">help linestyles</a>.
	The additional style character <code>#</code> reduces the filled objects (such as <code>circle()</code>, <code>face()</code> and <code>ellipse()</code>) to their borders or visualizes them, respectively. Beside of <code>face()</code> and <code>triangle()</code> all filled objects may be modified with <code>@</code>, which results in displaying both, the face and the borders. The line thickness may be modified as well, using the numbers 0-9, which have to be passed to the corresponding style string.
	In combination with the compose mode of plots, the drawing mode may be used to add additional drawings to other plots or to add additional annotations.
	<example desc="Drawing of a blue square and a pointing arrow, which carries an annotation:">
		draw face(0,0,2,0,"b"), trace(-3.3,-3.3,-0.2,-0.2,"kA"), text(-3,-3,0,0,"Square","k:L")
	</example>
	<img src="<>/docs/draw.png" />
	<em>See also:</em> <a href="nhlp://plot?frame=self">help plot</a>, <a href="nhlp://draw3d?frame=self">help draw3d</a>, <a href="nhlp://colors?frame=self">help colors</a>, <a href="nhlp://linestyles?frame=self">help linestyles</a> und <a href="nhlp://compose?frame=self">help compose</a>
</article>