<!--
	NumeRe: Framework fuer Numerische Rechnungen
	Copyright (C) 2016  Erik Haenel et al.

	This program is free software: you can redistribute it and/or modify
	it under the terms of the GNU General Public License as published by
	the Free Software Foundation, either version 3 of the License, or
	(at your option) any later version.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public License
	along with this program.  If not, see <http://www.gnu.org/licenses/>.
-->

<article id="data">
	<title string="Datenfiles" />
	NumeRe kann Datenfiles einlesen, Aktionen auf den eingelesenen Daten ausführen und die erhaltenen Ergebnisse in neue Datenfiles schreiben.
	Als Datei-Formate sind ASCII-Textfiles (ANSI-Codierung) mit den Endungen *.dat und *.txt und selbstverständlich das NumeRe-eigene "NumeRe-Datafile"-Format (*.ndat) erlaubt. Text oder Kommentare müssen dabei durch ein <code>#</code> am <em>Anfang</em> der Zeile auskommentiert sein.
	Die Spalten können leerzeichen- oder tabulatorgetrennt sein und als Dezimaltrennzeichen kann ein Punkt <code>.</code> oder ein Komma <code>,</code> verwendet werden. (Im letzteren Falle werden die Kommata durch Punkte ersetzt).
	Es wird auch das Einlesen "ungültiger" (z.B. eines fehlerhaften Messwerts) Einträge unterstützt. Diese "ungültigen" Messwerte müssen durch die Zeichenketten <code>---</code>, <code>NAN</code>, <code>nan</code>, <code>NaN</code>, <code>inf</code> oder <code>-inf</code> in der Tabelle dargestellt sein.
	Außerdem werden CASSY(R)-LABX-Dateien teilweise unterstützt: NumeRe kann die Wertetabelle einer *.labx-Datei inklusive ihrer Spaltenüberschriften extrahieren. Das Exportieren in eine *.labx-Datei ist hingegen <em>nicht</em> möglich. Ebenso werden Comma-Separated-Value-Datafiles (*.csv), IGOR(R)-Binäre-Wellendateien (*.ibw), OpenDocument-Spreadsheets (*.ods), Excel(R)-(97-2003)-Mappen (*.xls), Excel(R)-Mappen (*.xlsx) und JCAMP-DX-Spektren (*.jdx, *.dx oder *.jcm) bis Version 5.1 zu Teilen unterstützt.
	Einzelne Elemente einer Datei können auch mit der Syntax <code>data(ZEILE,SPALTE)</code> ausgelesen werden. Die Indizierung erfolgt dabei durch natürliche Zahlen <em>größer</em> Null: 1,2,3,... Die Daten des Datenfiles können dabei NICHT bearbeitet werden.
	Bereiche von Elementen können dabei mit der Syntax <code>ERSTER INDEX:ZWEITER INDEX</code> erhalten werden. Wird dabei einer der beiden Indices weggelassen, wird er automatisch durch den minimalen bzw. maximalen Index ergänzt. Fehlen beide Indices, wird folglich der gesamte, mögliche Bereich ausgewählt. Es können auch Zeilen/Spalten aus anderen Datensätzen als Indexmenge verwendet werden.
	Die Spaltenüberschriften können ähnlich gelesen (und sogar bearbeitet) werden: <code>data(#,SPALTE)</code> bzw. <code>data(#,SPALTE) = KOPF</code>
	Parameter für das Kommando <code>data</code> sind die folgenden:
	<list>
		<item node="-clear">Eingelesene Daten aus dem Speicher löschen</item>
		<item node="-load=DATEI">Daten aus der Datei DATEI einlesen. Dateinamen mit Leerzeichen müssen von Anführungszeichen umschlossen sein. Es können auch Platzhalter wie <code>*</code> oder <code>?</code> verwendet werden (<a href="nhlp://explorer?frame=new">help explorer</a> für deren Funktionsweise). Mit dem Parameter <code>-all</code> können alle Dateien eingelesen werden, die dem Schema von DATEI folgen</item>
		<item node="-reload">Daten der geladenen Datei erneut einlesen (etwa nach einer Bearbeitung der Datei selbst). Wenn mehrere Dateien zugleich in den Speicher gelesen wurden, kann dieser Parameter nicht verwendet werden</item>
		<item node="-app=DATEI">Daten aus der Datei DATEI an bereits geladene Daten anhängen. In DATEI können Platzhalter verwendet werden. Mit dem Parameter <code>-all</code> können alle Dateien angehängt werden, die dem Schema von DATEI folgen</item>
		<item node="-paste">Ermöglicht das direkte Einfügen tabellarischer Daten aus beispielsweise einer Tabellenkalkulation. Spaltentrennzeichen kann Tabulator, Leerzeichen, Komma oder Semikolon sein; das Dezimaltrennzeichen kann Punkt oder Komma sein, jedoch kein Komma, wenn das Spaltentrennzeichen bereits ein Komma ist. Text in der ersten Zeile wird als Tabellenköpfe interpretiert; der restliche Text wird ignoriert.<br>Sollte NumeRe das Clipboard nicht öffnen können, wird <code>|PASTE&gt;</code> am Anfang der Zeile angezeigt. Nun müssen die Daten direkt in die Console einkopiert werden, wobei das Einfügen nach der letzten Zeile dem Kommando <code>endpaste</code> abgeschlossen wird. Sollten bereits Daten geladen sein, werden die eingefügten Daten mit den Daten im Speicher zusammengeführt.</item>
		<item node="-show">Daten im Speicher anzeigen</item>
		<item node="-showf">Vollständigen Datensatz anzeigen</item>
		<item node="-save=NAME">Daten in das Datenfile NAME (*.ndat) speichern. Dateinamen mit Leerzeichen müssen von Anführungszeichen umschlossen sein</item>
		<item node="-export=NAME">Daten in die Textdatei NAME (*.dat) exportieren. Dateinamen mit Leerzeichen müssen ebenfalls von Anführungszeichen umschlossen sein. (Mit der Endung *.tex wird eine TeX-Datei, mit *.csv eine CSV-Datei und mit *.xls eine Excel-(97-2003)-Mappe erzeugt)</item>
		<item node="-sort[...]">Daten eines Datensatzes spaltenweise sortieren. Der Aufruf ohne weitere Option sortiert den gesamten Datensatz aufsteigend. Um ihn absteigend zu sortieren, muss <code>-sort=desc</code> übergeben werden. Einzelne Spalten können mit der Option <code>cols=SPALTEN[SPALTENGRUPPE]</code> im Format <code>SPALTE1:SPALTE2</code> ausgewählt werden, wobei nur Spalten sortiert werden. Spaltengruppen werden nach der vorangehenden Spalte sortiert. Kann z.B. verwendet werden, wenn zwischen den Elementen verschiedener Spalten eine feste Beziehung besteht (z.B.: <expr>x-y</expr>-Wertepaare)</item>
		<item node="-MAF">Führt die Multiargumentfunktion MAF auf alle Elemente aus und gibt das Ergebnis zurück. Multiargumentfunktionen sind <code>avg</code>, <code>std</code>, <code>sum</code>, <code>prd</code>, <code>med</code>, <code>min</code>, <code>max</code>, <code>num</code>, <code>cnt</code> und <code>norm</code>. Mit den zusätzlichen Parametern <code>-lines</code> und <code>-cols</code> wird die Berechnung Zeilenweise bzw. Spaltenweise durchgeführt und als Vektor zurückgegeben; mit <code>-grid</code> werden die Elemente als Teil eines Datengitters betrachtet und die Multiargumentfunktionen auf die <expr>z</expr>-Werte des Datengitters beschränkt. Die <code>-every=FIRST,INCR</code>-Option ermöglicht es mit <code>lines</code> oder <code>cols</code>, die erste Spalte/Zeile und das Inkrement (jede => INCR=1, jede zweite => INCR=2, etc.) vorzugeben. Wird dieser Option nur ein Wert vorgegeben, so wird dieser für beide Werte verwendet
	</list>
	Igor Binäre-Wellendateien können mehr als zwei Dimensionen haben. Beim Laden dieser Daten werden die Daten ebenenweise nebeneinander abgelegt. Mit der Option <code>slices=SLICE</code> kann festgelegt werden, welche Dimensionen zu Ebenen zusammengefasst werden sollen: <code>slices=xy</code> ist Standard und generiert Ebenen aus <expr>x-y</expr>-Koordinaten; <code>slices=xz</code> generiert hingegen Ebenen aus <expr>x-z</expr>-Koordinaten.
	An <code>clear</code> und <code>load</code> kann <code>ignore</code> angehängt werden, um etwaige erforderliche Bestätigungen zu unterdrücken. Außerdem können <code>load</code> und <code>app</code> noch mit <code>head=ZEILE</code> kombiniert werden, wobei ZEILE die Zeilennummer angibt, in der die Tabellenköpfe zu finden sind (bei Textfiles, die von NumeRe erzeugt wurden, ist das standardmäßig die Zeile 14). Standardmäßig werden auch leere Spalten ignoriert, um RAM zu sparen. Um diese trotzdem zu laden, kann dieses Verhalten dauerhaft abgeschalten (siehe <a href="nhlp://set?frame=new">help set</a>) oder temporär mittels des zusätzlichen Parameters <code>keepdim</code> oder <code>complete</code> überschrieben werden
	<example desc="Daten aus dem Datenfile 'samples/data.dat' laden und anschließendes Auflisten aller Elemente der Spalte 2:">
		data -load=samples/data
		Daten aus "samples/data.dat" wurden erfolgreich in den Speicher geladen: der Datensatz besteht aus 25 Zeile(n) und 4 Spalte(n).
		data(:,2)
	</example>
	<em>Siehe auch:</em> <a href="nhlp://load?frame=self">help load</a>, <a href="nhlp://save?frame=self">help save</a>, <a href="nhlp://string?frame=self">help string</a>, <a href="nhlp://datagrid?frame=self">help datagrid</a> und <a href="nhlp://explorer?frame=self">help explorer</a>
</article>